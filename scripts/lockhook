#!/usr/bin/env bash

# Only exported variables can be used within the timer's command.
export PRIMARY_DISPLAY="$(xrandr | awk '/ primary/{print $1}')"

waitbeforedim=180
waitbeforelock=15
waitbeforesuspend=10

# Run xidlehook
xidlehook \
  `# Don't lock when there's a fullscreen application` \
  --not-when-fullscreen \
  `# Don't lock when there's audio playing` \
  --not-when-audio \
  `# Dim the screen after first inactivity period, undim if user becomes active` \
  --timer $waitbeforedim \
		"redshift -oPr -b 0.1 -l '46.55:6.6006'" \
		"redshift -oPr -b 1 -l '46.55:6.6006'" \
  `# Undim & lock after second inactivity period` \
  --timer $waitbeforelock \
		"$SCRIPTS_PATH/lockscreen" "" \
  `# Finally, suspend the system` \
  --timer $waitbeforesuspend \
		"systemctl suspend" ""



# Adapt below code and add toggle option. To be able to disable when running long
# jupyter kernels for example. To pause `kill -STOP $PID` to restart auto-idling
# `kill -CONT $PID`
#
#pid=$(ps aux | grep 'xss-lock' | grep -v 'grep' | awk '{print $2}' | sed 's/ \+//g')
#
#if [ ! -z $pid ]
#then
#	kill $pid
#else
#	xss-lock -l -n "$SCRIPTS_PATH/dimscreen" -- $SCRIPTS_PATH/lockscreen &
#fi
#
