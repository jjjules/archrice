#!/usr/bin/zsh

toggle=0
while [[ $# -gt 0 ]]; do
  case $1 in
    -t|--toogle)
			toggle=1
      shift
      ;;
    *)
      echo "Ignoring inputs given to lockhook"
      ;;
  esac
done

if [ $toggle -eq 1 ]
then
	psxidle="$(ps aux | grep 'xidlehook' | grep -v 'grep')"
	if [ ! -z "$psxidle" ]
	then
		pid="$(awk '{print $2}' <<< $psxidle)"
		pstate="$(awk '{print $8}' <<< $psxidle)"
		if [[ "$pstate" =~ '^T.*' ]]
		then
			action=CONT
		else
			action=STOP
		fi

		kill -$action $pid
	else
		echo 'Cannot toggle xidlehook, process is not running'
	fi
else
	# Only exported variables can be used within the timer's command.
	export PRIMARY_DISPLAY="$(xrandr | awk '/ primary/{print $1}')"

	waitbeforedim=300
	waitbeforelock=15
	waitbeforesuspend=10

	# Run xidlehook
	xidlehook \
		`# Don't lock when there's a fullscreen application` \
		--not-when-fullscreen \
		`# Don't lock when there's audio playing` \
		--not-when-audio \
		`# Dim the screen after first inactivity period, undim if user becomes active` \
		--timer $waitbeforedim \
			"redshift -oPr -b 0.1 -l '46.55:6.6006'" \
			"redshift -oPr -b 1 -l '46.55:6.6006'" \
		`# Undim & lock after second inactivity period` \
		--timer $waitbeforelock \
			"$SCRIPTS_PATH/lockscreen" "" \
		`# Finally, suspend the system` \
		--timer $waitbeforesuspend \
			"systemctl suspend" ""
fi
