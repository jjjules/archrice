#!/bin/zsh
##############################################
#                                            #
# To avoid conflicts when updating dotfiles, #
# remove `.profile` before running.          #
#                                            #
##############################################

trap "exit" INT
set -e

USER=jules
export HOME="/home/$USER"
source $HOME/archrice/dotfiles/profile
source $DOTS_PATH/zshenv

TMP="$(mktemp -d /tmp/arch-install-helper.backup.XXXX)"
echo "Backup at $TMP"

update_dotfiles() {
	echo 'Setup of config files in .config'
	confignames="$(find $DOTS_PATH/.config -maxdepth 1 | sed -n "s:$DOTS_PATH/.config/::p")"
	for name (${(f)confignames})
	do
		from="$DOTS_PATH/.config/$name"
		to="$HOME/.config/$name"

		[ -e $to -o -L $to ] && mv $to $TMP
		sudo -u $USER -g $USER ln -s $from $HOME/.config

		[ $? -eq 0 ] && msg=Done || msg=Failed
		echo "$to -> $from: $msg"
	done
	echo

	echo "Setup of other config files using 'config-destinations.txt'"
	while read line
	do
		read from to <<< "$(envsubst <<< $line)"
		from="$DOTS_PATH/$from"
		# [ -e $to -o -L $to ] && echo moving


		[ -e $to -o -L $to ] && mv $to $TMP
		! [ -d ${to%/*} ] && sudo -u $USER -g $USER mkdir -p ${to%/*}
		sudo -u $USER -g $USER ln -s $from $to

		[ $? -eq 0 ] && msg=Done || msg=Failed
		echo "$to -> $from: $msg"
	done < $DOTS_PATH/config-destinations.txt
	echo

	echo 'Setup theme for zsh'
	sudo -u $USER -g $USER ln -sf $ZDOTDIR/mytheme.zsh-theme $ZSH_CUSTOM/themes/mytheme.zsh-theme
	echo 'Setup touchpad'
	ln -fs $DOTS_PATH/xorg-70-synaptics.conf /etc/X11/xorg.conf.d/70-synaptics.conf
	echo 'Setup login manager'
	ln -fs $DOTS_PATH/sddm.conf /usr/lib/sddm/sddm.conf.d/sddm.conf
	echo 'Setup for cron jobs'
	sudo -u $USER sh -c "crontab - <$DOTS_PATH/crontab"
}

while [[ $# -gt 0 ]]; do
	case $1 in
		--update-dotfiles)
			ONLY_DOTFILE_UPDATE=true
			shift
			;;
		*)
			echo 'Unknown argument. Exiting...'
			exit 127
			;;
	esac
done

if [ $ONLY_DOTFILE_UPDATE ]
then
	update_dotfiles
	exit 0
fi





# Install AUR helper
if [ ! -f /usr/bin/paru ];then
	echo "Installing paru..."
	sudo -u $USER mkdir -p $HOME/documents/repos
	cd $HOME/documents/repos
	sudo -u $USER git clone https://aur.archlinux.org/paru.git
	cd paru
	sudo -u $USER makepkg -si
	echo "Done"
fi

# Package installation
pacman -Sy
pacman -S pacman-contrib reflector sshpass pass htop btop mlocate xorg-xinit xorg-xrandr arandr xorg-xev xorg-xmodmap acpilight xorg-xclipboard xsel xclip i3-gaps i3blocks gsimplecal sddm qt5-quickcontrols qt5-graphicaleffects gnome-keyring zsh-completions ttf-font-awesome ttf-dejavu ctags wget imagemagick sxiv feh jq zathura zathura-pdf-mupdf ghostscript pdfgrep pdftk pandoc texlive-most deepin-screenshot pulseaudio pulseaudio-bluetooth alsa-utils pavucontrol bluez bluez-utils blueberry mpd mpc ncmpcpp mpv gcc cmake python python-pip bpython lua firefox deluge unclutter unrar zip unzip gzip tar redshift tree rsync atool mediainfo ueberzug ffmpegthumbnailer docx2txt odt2txt bat lynx fzf dunst dosfstools dmidecode cronie clipmenu --needed --noconfirm

sudo -u $USER paru -Sy
sudo -u $USER paru -S lf gdmap steghide betterlockscreen xidlehook libxft-bgra dragon-drop-git mailspring micromamba vscodium-bin tldr++ --noconfirm

pip3 install --user -U numpy thefuck flake8

# Install vim plugin manager
[ -d $HOME/.vim/bundle/Vundle.vim ] || sudo -u $USER git clone https://github.com/VundleVim/Vundle.vim.git $HOME/.vim/bundle/Vundle.vim

# Install st
cd $RICE_PATH/st
make install
cd -

# Install Oh-my-zsh
if [ -d $ZSH ]; then
	vared -p "Oh-my-zsh folder exists, Delete it? " -c reply
	if [[ $reply =~ "^[yY](es)?$" ]]
	then
		rm -rf $ZSH
	fi
fi
sudo -u $USER --preserve-env=ZSH sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
sudo -u $USER ln -fs $DOTS_PATH/mytheme.zsh-theme $ZSH_CUSTOM/themes/mytheme.zsh-theme

# Install zsh plugins
plugins=('zsh-autosuggestions' 'zsh-syntax-highlighting' 'autoupdate')
plugins_url=('https://github.com/zsh-users/zsh-autosuggestions.git' 'https://github.com/zsh-users/zsh-syntax-highlighting.git' 'https://github.com/TamCore/autoupdate-oh-my-zsh-plugins')
for i in {1..${#plugins}}
do
	url=${plugins_url[$i]}
	dest="$ZSH_CUSTOM/plugins/${plugins[$i]}"
	! [ -d $dest ] && sudo -u $USER git clone $url $dest
	echo
done

# Install login manager theme
echo 'Extracting sddm-chili theme ...'
tar -xzvf $RICE_PATH/misc/sddm-chili.tar.gz -C /usr/share/sddm/themes > /dev/null
echo

# Enable systemd services
systemctl enable systemd-timesyncd.service
systemctl enable cronie.service
systemctl enable sddm.service
systemctl enable bluetooth.service
systemctl enable betterlockscreen@${USER}

# Add shell vim launchers
sed 's/^Exec=\(.*\)/Exec=st -e \1/' /usr/share/applications/vim.desktop | tee /usr/share/applications/vim-st.desktop > /dev/null
sed 's/^Exec=\(.*\)/Exec=urxvt -e \1/' /usr/share/applications/vim.desktop | tee /usr/share/applications/vim-urxvt.desktop > /dev/null
sed -i -e 's/^#\s*Color\s*$/Color/' -e 's/^#\s*\(ParallelDownloads.*\)$/\1/' /etc/pacman.conf

# Setup of dotfiles symbolic links
update_dotfiles

# Compile submodules
for mod in st dmenu
do
	cd $RICE_PATH/$mod
	make install
done

# Last adjustements and verifications
[ -d $HOME/go -a ! -z $GOPATH ] && mv $HOME/go $GOPATH
[ -d $HOME/.cargo -a ! -z $CARGO_HOME ] && mv $HOME/.cargo $CARGO_HOME
sudo -u $USER mkdir -p "$HOME/.vim/undo"
sudo -u $USER mkdir -p $XDG_DATA_HOME/{trash,bash,zsh}
sudo -u $USER mkdir -p "$HOME/musics/mpd-playlists"
sudo mkdir /mnt/{seagate,seagate-chloe,usbkey}

chown ${USER}:$USER -R $HOME/.cache
echo 'File left in home belonging to root:'
find $HOME -user root
echo

set +e
find $HOME -maxdepth 1 -name '.zsh*' -o -name '.zcompdump*' | grep -v '.zshenv' | xargs -n1 rm --
rm .viminfo .lesshst 2>/dev/null

echo 'Done!'
