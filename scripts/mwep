#!/bin/sh
# Script allowing to efficiently move downloaded files to epfl directory

# This scripts can accept exactly one option or it will behave as if they were none.
# In its default behavior, it will prompt for the user to choose the file.

# Available options:
# -r: move the most recent files
# -m: prompt for multiple files

source $HOME/.profile

# File definition
prefix_file="$HOME/downloads"
if [ $# -eq 1 ]
then
	if [ "$1" = '-r' ]
	then
		file="$(\ls --color=tty -v -alhtr $prefix_file |\
			grep -v '\s\.\+$' |\
			tail -n1 |\
			sed 's,\s\+, ,g' |\
			cut -d' ' -f9-)"
	elif [ "$1" = '-m' ]
	then
		multiple_option=1
		file="$(ls $HOME/downloads | fzf -m | sed 's, ,\ ,g')"
	else
		echo 'Invalid option, falling back to default behavior'
		file=$(ls $prefix_file | dmenu -p "file: ")
	fi
else
	file=$(ls $prefix_file | dmenu -p "file: ")
fi
[ -z "$file" ] && exit

# Short filename creation
if [ $multiple_option -eq 1 ]
then
	file_short="$(wc -l <<< "$file") files"
elif [ $(echo -n $file | wc -c) -gt 15 ]
then
	file_short=$(sed 's/\(.\{15\}\).*/\1.../' <<< "$file")
else
	file_short="$file"
fi

# Conversion to absolute path
file=$(sed "s,^,$prefix_file/," <<< "$file")

# Destination definition
prefix_dir=${EPFL_DIR}
dir=$(find $prefix_dir -maxdepth 4 -type d |\
	sed -e "s,$prefix_dir/,," -e "s,^$prefix_dir,/," |\
	grep -Fv .|\dmenu -p "move $file_short to: " |\
	sed -e "s, ,\ ,g")
if [ -z "$dir" ]
then
	exit
fi
dir="${prefix_dir}/${dir}"

if [ $multiple_option -eq 1 ]
then
	echo "$file" | xargs -n1 -I file mv file "$dir"
else
	new_name=$(basename $file)
	while [ -f "$dir/$new_name" ]
	do
		prompt 'File exists, overwrite?' "mv $file $dir"
		if [ $? -ne 0 ]
		then
			new_name=$(i3-input -P "Rename file $file_short: " |\
				grep output | cut --complement -d' ' -f1-2)
			if [ -z "$new_name" ]
			then
				exit 0
			fi
		fi
	done
	mv "$file" "$dir/$new_name"
	[ $? -ne 0 ] && dunstify -u normal -r 876667 "File could not been moved"
fi
