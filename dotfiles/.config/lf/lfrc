# Inspired from Luke Smith's confguration at https://github.com/LukeSmithxyz/voidrice
#
# Note on Image Previews
# 1. ueberzug must be installed.
# 2. The scope file (~/.config/lf/scope for me), must have a command similar to
#    mine to generate ueberzug images.
# 3. A `set cleaner` line as below is a cleaner script.
# 4. lf should be started through a wrapper script (~/.local/bin/lfub for me)
#    that creates the environment for ueberzug.

# Basic vars
set shell zsh
set shellopts '-eu'
set ifs '\n'
set scrolloff 10
set icons
set period 1
set hidden on
set hiddenfiles '.*:*.aux:*.bbl:*.bcf:*.blg:*.run.xml'
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/scope'

# cmds/functions
cmd open ${{
	case $(file --mime-type "$(readlink -f $f)" -b) in
		text/*|application/json|inode/x-empty) $EDITOR $fx;;
		image/*) rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|tif\|ico\)\(_large\)*$" |
			setsid -f sxiv -aio 2>/dev/null | while read -r file; do
				[ -z "$file" ] && continue
				lf -remote "send select \"$file\""
				lf -remote "send toggle"
			done &
			;;
		audio/*) mpv --audio-display=no $f ;;
		video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
		application/pdf|application/vnd*|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
		*) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
	esac
}}

cmd touch $touch "$(echo $* | tr ' ' '\ ')"
cmd cd $cd "$(echo $* | tr ' ' '\ ')"
cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N] "
	read ans
	[ $ans = "y" ] && xargs -I {} mv {} "${XDG_DATA_HOME:-$HOME/.local/share}/trash" <<< "$fx"
}}

cmd bulkrename ${{
	index=$(mktemp /tmp/lf-bulk-rename-index.XXXXXXXXXX)
	if [ -n "${fs}" ]; then
		echo "$fs" > $index
	else
		echo "$(ls "$(dirname $f)" | tr ' ' "\n")" > $index
	fi
	index_edit=$(mktemp /tmp/lf-bulk-rename.XXXXXXXXXX)
	cat $index > $index_edit
	$EDITOR $index_edit
	if [ $(cat $index | wc -l) -eq $(cat $index_edit | wc -l) ]; then
		max=$(($(cat $index | wc -l)+1))
		counter=1
		while [ $counter -le $max ]; do
			a="$(cat $index | sed "${counter}q;d")"
			b="$(cat $index_edit | sed "${counter}q;d")"
			counter=$(($counter+1))

			[ "$a" = "$b" ] && continue
			[ -e "$b" ] && echo "File exists: $b" && continue
			mv "$a" "$b"
		done
	else
		echo "Number of lines must stay the same"
	fi
	rm $index $index_edit
}}

cmd dragon-drop ${{
	xargs dragon-drop <<< "$fx"
}}

# Bindings
map <c-f> $lf -remote "send $id select '$(fzf)'"
map zz cd /home/jules
map zr cd /
map zd cd /home/jules/documents
map zw cd /home/jules/downloads
map zi cd /home/jules/images
map zv cd /home/jules/videos
map zmu cd /home/jules/musics
map zmt cd /mnt/
map zch cd /home/jules/.config
map zcc cd /home/jules/archrice/dotfiles
map zs cd /home/jules/archrice/scripts
# map Z push $z

map zma cd /home/jules/documents/magma

map <enter> open
map D delete
map E extract
map C copyto
map M moveto
map m push :mkdir<space>
# map Ã© mark-save
map <c-r> reload
map gh set hidden!
map zp set preview!
# map o &mimeopen $f
# map O $mimeopen --ask $f
map Y $printf "%s" "$fx" | xclip -selection clipboard
map W $setsid -f $TERMINAL >/dev/null 2>&1

map I push A<c-a> 					# at the very beginning
map a push A<a-b><a-b><a-f> # before extension
map A rename 								# at the very end
map r push A<c-u> 					# new rename
map B bulkrename
